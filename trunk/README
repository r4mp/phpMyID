phpMyID - A standalone, single user, OpenID Identity Provider

by: CJ Niemira <siege (at) siege (dot) org>
(c) 2006
http://siege.org/projects/phpMyID


phpMyID is a small, fairly lightweight, standalone, single user Identity
Provider for OpenID authentication. It comprises a single PHP script that can be
used by one individual to run their own personal OpenID "IdP."

This program requires no external libraries, and has very minimal requirements.
It should run on any PHP 4/5 server, and as long as it built without
intentionally disabling the bcmath functions, it should support 'Smart Mode.'
This program caches all data using built-in PHP session handling, so it requires
no database, and no explicit write access to the file system.

User authentication is done using HTTP Digest authentication, so your password
is never transmitted over the wire in plain text.


For more information on OpenID, please see http://openid.net


INSTALLATION

phpMyID can be installed on just about any PHP server. It is recommended that
you use a server that you own and control.

1) You'll need to decide your login name and password. This is what you will use
   to authenticate yourself to phpMyID. Your login name can be anything you
   like.

   To create your password, you will need an MD5 hashing utility. If you are a
   Linux or OSX user, you can use openssl. Simply open a terminal and type:

    $ echo -n 'username:phpMyID:password' | openssl md5

   If you are a Windows user, and do not already have an MD5 hashing tool, one
   is available at http://siege.org/projects/phpMyID . To use it, download
   the exe, and open a cmd session. Use it as follows:

    C:\Documents and Settings\cniemira>cd Desktop
    C:\Documents and Settings\cniemira\Desktop>md5.exe -d"username:phpMyID:password"

   In either case, make sure to substitute your username and password where
   indicated. The string "phpMyID" should not be changed. The resulting output
   is your Digest password that can be entered into the 'auth_password' field
   where indicated below.


2) Follow exactly one of the following steps to finalize your phpMyID script
   configuration.


2a) For a single user with an internal configuration (easiest):
    Edit the file MyID.php and look for the 'configuration' section up top.
    You will need to uncomment the '$profile' section, and optionally the
    '$sreg' section. Simply change the field values as needed.

    To finish installation, upload or copy only the file MyID.php, to a web
    accessable directory on your PHP server. You can rename it if you like. This
    is your ID file.

    To upgrade phpMyID, you follow the same installation path.


2b) For a single user with an external configuration:
    Edit the file MyID.config.php. You will need to change the field values for
    the '$profile' section, and optionally uncomment and change any fields in
    the '$sreg' section to set your profile.

    Do not edit the file MyID.php

    To finish installation, upload or copy both the files MyID.config.php and
    MyID.php to a web accessable directory on your PHP server. You can rename
    MyID.php if you like, as it is your ID file.

    To upgrade phpMyID, you only need to replace MyID.php with the new version.


2c) For muliple users:
    For each user, make a copy of the file MyID.config.php and give it a unique
    name (such as 'usersname.php', 'cjniemira.php', 'soandso.php', etc...).
    Edit the copied file and change the field values for the '$profile' section.
    Optionally, you can uncomment and change any fields in the '$sreg' section
    to set the user's profile.

    Do not edit the file MyID.php

    To finish installation, upload or copy both the files MyID.php file and
    all copies of the 'user' file to the same web accessable directory on your
    PHP server. For each person using the system, the renamed copy of
    'MyId.config.php' which contains their profile information is their ID file.

    To upgrade phpMyID, you only need to replace MyID.php with the new version.


3) Visit the corrosponding URL for the ID file you just uploaded and you will be
   greeted by a message like the following:

    This is an OpenID server endpoint. For more information, see http://openid.net/
    http://siege.org/MyID.php

   The second URL, in this case the one for siege.org, is your Identity Provider
   URL. It is this URL you must link as your openid.server.

   The preferred way of setting this up is to determine the URL you wish to
   authenticate as (for example "siege.org", in my case), and add the following
   to the HTML head section for the index/default document:

    <link rel="openid.server" href="http://siege.org/MyID.php">
    <link rel="openid.delegate" href="http://siege.org/MyID.php">

   You may now claim to own that URL on any site that uses OpenID.

   As an alternative to editing another document, you may refer directly to the
   phpMyID.php script as your claimed identity (aka, your OpenID login). It
   contains the necessary headers automatically, and you do not need to specify
   the port number.

   For example, I could log in to an OpenID protected site as:

    http://siege.org			- because I placed the server and
					  delegate headers in the page presented
					  by that url.
	- or -
    http://siege.org/MyID.php		- because the script automatically adds
					  the required headers.

   I could also use:
	- http://siege.org
	- siege.org (I don't have to specify the "http://" part)
	- siege.org/MyID.php
	- www.siege.org
	- and so on...


USAGE

There isn't much to using phpMyID other than pointing at it, and logging in.
If you wish, you can log out by visiting:

  http://yourdomain.com/path/to/MyID.php?openid.mode=logout

There is also a 'log in' mode that will prompt you for credentials without
having to be referred from a client site.

 http://yourdomain.com/path/to/MyID.php?openid.mode=login


TROUBLESHOOTING

phpMyID has a built-in debug function that will log information about what it is
attempting to do. You can activate this by adding 'debug' to your profile array.

  $profile['debug'] = true;

The default location of the debug log is 'phpMyID.debug.log' in your temp dir as
discovered by sys_get_temp_dir. You can specify an absolute path by setting
'logfile' in your profile array;

  $profile['logfile'] = '/var/tmp/phpMyID.debug.log';
